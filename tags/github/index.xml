<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on Arcane Energy</title><link>https://arcaneenergy.github.io/tags/github/</link><description>Recent content in github on Arcane Energy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://arcaneenergy.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>MultiMesh Scatter</title><link>https://arcaneenergy.github.io/assets/multimesh_scatter/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://arcaneenergy.github.io/assets/multimesh_scatter/</guid><description>A simple tool to randomly place meshes.
Download MultiMesh Scatter
How to use Download this repository or download the addon from the AsseLib in Godot. Import the addons folder into your project. Activate MultiMesh Scatter under Project &amp;gt; Project Settings &amp;gt; Plugins. Add a MultiMeshScatter node to the scene. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag.</description><content>&lt;p>&lt;strong>A simple tool to randomly place meshes.&lt;/strong>&lt;/p>
&lt;br clear="left" />
&lt;img
src="https://arcaneenergy.github.io/assets/multimesh_scatter/random_rotation.jpg"
class="image expandable"
/>
&lt;hr>
&lt;h2 id="download">Download&lt;/h2>
&lt;p>&lt;a href="https://github.com/arcaneenergy/godot-multimesh-scatter">MultiMesh Scatter&lt;/a>&lt;/p>
&lt;h2 id="how-to-use">How to use&lt;/h2>
&lt;ol>
&lt;li>Download this &lt;a href="https://github.com/arcaneenergy/godot-multimesh-scatter">repository&lt;/a> or download the addon from the
AsseLib in Godot.&lt;/li>
&lt;li>Import the addons folder into your project.&lt;/li>
&lt;li>Activate MultiMesh Scatter under Project &amp;gt; Project Settings &amp;gt; Plugins.&lt;/li>
&lt;li>Add a MultiMeshScatter node to the scene.&lt;/li>
&lt;/ol>
&lt;div class="row">
&lt;div class="col-xs-4">
&lt;video class="video" controls>
&lt;source src="https://arcaneenergy.github.io/assets/multimesh_scatter/video_01.mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;/div>
&lt;div class="col-xs-4">
&lt;video class="video" controls>
&lt;source src="https://arcaneenergy.github.io/assets/multimesh_scatter/video_02.mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;/div>
&lt;div class="col-xs-4">
&lt;video class="video" controls>
&lt;source src="https://arcaneenergy.github.io/assets/multimesh_scatter/video_03.mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;/div>
&lt;/div>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Scatter objects in the scene using a MultiMeshInstance node.&lt;/li>
&lt;li>Adjust the instance count, size, and collision layer.&lt;/li>
&lt;li>Randomize size and rotation of each instance.&lt;/li>
&lt;li>Automatically rotates each instance to the normal of the terrain.&lt;/li>
&lt;/ul>
&lt;h2 id="parameters">Parameters&lt;/h2>
&lt;ul>
&lt;li>&lt;code>count&lt;/code>: The number of instances to generate.&lt;/li>
&lt;li>&lt;code>placement_type&lt;/code>: Defines the placement type.&lt;/li>
&lt;li>&lt;code>placement_size&lt;/code>: The placement size of the bounding box. Enable &lt;code>show_debug_area&lt;/code> to view the size of the bounding
box. Note: If the &lt;code>placement_type&lt;/code> is set to Sphere, only the x value will be used to specify the radius of the
sphere.&lt;/li>
&lt;li>&lt;code>collision_mask&lt;/code>: The physics collision mask that the instances should collide with.&lt;/li>
&lt;li>&lt;code>offset_position&lt;/code>: Add an offset to the placed instances.&lt;/li>
&lt;li>&lt;code>offset_rotation&lt;/code>: Add a rotation offset to the placed instances.&lt;/li>
&lt;li>&lt;code>base_scale&lt;/code>: Change the base scale of the instanced meshes.&lt;/li>
&lt;li>&lt;code>min_random_size&lt;/code>: The minimum random size for each instance.&lt;/li>
&lt;li>&lt;code>max_random_size&lt;/code>: The maximum random size for each instance.&lt;/li>
&lt;li>&lt;code>random_rotation&lt;/code>: Rotate each instance by a random amount between. &lt;code>-random_rotation&lt;/code> and &lt;code>+random_rotation&lt;/code>.&lt;/li>
&lt;li>&lt;code>seed&lt;/code>: A seed to feed for the random number generator.&lt;/li>
&lt;li>&lt;code>show_debug_area&lt;/code>: Toggle the visibility of the bounding box area.&lt;/li>
&lt;/ul>
&lt;h2 id="notes">Notes&lt;/h2>
&lt;ul>
&lt;li>The sphere placement type takes &lt;code>placement_size.x&lt;/code> for the radius. The y and z values are not used.&lt;/li>
&lt;li>The sphere placement type behaves more like a capsule shape. This means that only the horizontal radius is taken
into account when scattering meshes.&lt;/li>
&lt;li>Scattering occurs automatically in the editor whenever you change a parameter or move the MultiMeshScatter node.
In game mode, the scatter occurs once at the beginning of the game.&lt;/li>
&lt;/ul>
&lt;h2 id="license">License&lt;/h2>
&lt;p>&lt;a href="https://arcaneenergy.github.io/LICENSE.md">MIT License&lt;/a>&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/2fa4guxq6iU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></content></item><item><title>Tilemap Level Editor</title><link>https://arcaneenergy.github.io/software/tilemap_level_editor/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://arcaneenergy.github.io/software/tilemap_level_editor/</guid><description>Simple level editor for Godot with JSON export functionality. Made with Godot.
Trailer Description Use case This is currently used in a personal project. It&amp;rsquo;s used to load in JSON files into Godot to recreate the levels at runtime. The exported JSON file contains all levels and individual cells. This makes it easy to recreate the level in Godot.</description><content>&lt;blockquote>
&lt;p>Simple level editor for Godot with JSON export functionality. Made with Godot.&lt;/p>
&lt;/blockquote>
&lt;div class="row">
&lt;div class="col-xs-6">
&lt;a href="https://github.com/arcaneenergy/tilemap-level-editor">
&lt;img src="https://arcaneenergy.github.io/icons/github_badge.svg">
&lt;/a>
&lt;/div>
&lt;div class="col-xs-6">
&lt;a href="https://arcaneenergy.itch.io/tilemap-level-editor">
&lt;img src="https://arcaneenergy.github.io/icons/itch_io_badge.svg">
&lt;/a>
&lt;/div>
&lt;/div>
&lt;div class="itchio-widget">
&lt;iframe src="https://itch.io/embed/1277666?bg_color=202020&amp;amp;fg_color=ffffff&amp;amp;link_color=fa5c5c&amp;amp;border_color=333d68"
width="552" height="167" frameborder="0">&lt;/iframe>
&lt;/div>
&lt;h2 id="trailer">Trailer&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/01ktb-9E6J0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h2 id="description">Description&lt;/h2>
&lt;h2 id="use-case">Use case&lt;/h2>
&lt;p>This is currently used in a personal project. It&amp;rsquo;s used to load in JSON files into Godot to recreate the levels at
runtime. The exported JSON file contains all levels and individual cells. This makes it easy to recreate the level in
Godot.&lt;/p>
&lt;p>Alternatively, you can use this program to easily create levels in the editor.&lt;/p>
&lt;h2 id="controls">Controls&lt;/h2>
&lt;p>Placement:&lt;/p>
&lt;ul>
&lt;li>Left click: Place tile (if selected)&lt;/li>
&lt;li>Right click: Delete tile&lt;/li>
&lt;/ul>
&lt;p>Other:&lt;/p>
&lt;ul>
&lt;li>TAB: Toggle GUI&lt;/li>
&lt;li>SHIFT + Scroll up: Increase brush size&lt;/li>
&lt;li>SHIFT + Scroll down: Decrease brush size&lt;/li>
&lt;/ul>
&lt;p>Camera:&lt;/p>
&lt;ul>
&lt;li>Middle mouse drag: Drag camera around&lt;/li>
&lt;li>W / ↑: Move camera up&lt;/li>
&lt;li>S / ↓: Move camera down&lt;/li>
&lt;li>A / ←: Move camera left&lt;/li>
&lt;li>D / →: Move camera right&lt;/li>
&lt;li>Mouse scroll up: Zoom in&lt;/li>
&lt;li>Mouse scroll down: Zoom out&lt;/li>
&lt;/ul>
&lt;h2 id="ui-overview">UI Overview&lt;/h2>
&lt;p>Create new layers with the &lt;code>+ New Layer&lt;/code> button. This brings up a dialog box for selecting an image file. After
selecting a file, the new layer appears in the list.&lt;/p>
&lt;p>Switch between layers by pressing the arrow to the left of the layer. This will open the tileset on the left. Use the up
and down arrow keys to move layers.&lt;/p>
&lt;img
src="https://arcaneenergy.github.io/software/tilemap_level_editor/image_01.png"
class="image expandable"
/>
&lt;p>Select a tile and start drawing.&lt;/p>
&lt;img
src="https://arcaneenergy.github.io/software/tilemap_level_editor/image_02.png"
class="image expandable"
/>
&lt;p>Change the size and shape of the cursor using the buttons in the lower right corner.&lt;/p>
&lt;img
src="https://arcaneenergy.github.io/software/tilemap_level_editor/image_03.png"
class="image expandable"
/>
&lt;h2 id="exported-json-file">Exported JSON file&lt;/h2>
&lt;p>The exported JSON file might look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#f92672">&amp;#34;layers&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;texture_path&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;C:/tilemap-level-editor/test/tileset.png&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;cells&amp;#34;&lt;/span>: [
[
&lt;span style="color:#ae81ff">4&lt;/span>,
&lt;span style="color:#ae81ff">-5&lt;/span>,
&lt;span style="color:#ae81ff">-3&lt;/span>
]
]
}
],
&lt;span style="color:#f92672">&amp;#34;objects&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;key&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;player&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;position&amp;#34;&lt;/span>: [
&lt;span style="color:#ae81ff">2&lt;/span>,
&lt;span style="color:#ae81ff">4&lt;/span>
]
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each cell contains an ID, an x and a y position. The ID is used to identify which cell in the tileset it refers to.&lt;/p>
&lt;h2 id="problems">Problems&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Currently, the program only supports tiles of 16x16 size. The spritesheet needs to be divisible by 16 (16, 32, 48,
64 etc.)&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Exported texture paths are absolute.&lt;/li>
&lt;/ul>
&lt;p>Godot_v3.5-rc2&lt;/p></content></item></channel></rss>