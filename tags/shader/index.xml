<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shader on Arcane Energy</title><link>https://arcaneenergy.github.io/tags/shader/</link><description>Recent content in shader on Arcane Energy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 07 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://arcaneenergy.github.io/tags/shader/index.xml" rel="self" type="application/rss+xml"/><item><title>Squash and Stretch Shader</title><link>https://arcaneenergy.github.io/assets/squash_stretch/</link><pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate><guid>https://arcaneenergy.github.io/assets/squash_stretch/</guid><description>An extremely simple implementation of a squash and stretch shader in Godot. Tested in Godot 4.0 Alpha 11.
Note: You may need a high-poly model.
shader_type spatial; uniform vec2 direction = vec2(1.0); uniform float squash: hint_range(0.0, 2.0) = 1.0; uniform float offset: hint_range(-0.5, 0.5) = 0.0; void vertex() { float v = abs(VERTEX.y + offset) * squash + direction.x; VERTEX *= vec3(v, direction.y, v); } Find the shader on Godot Shaders.</description><content>&lt;p>An extremely simple implementation of a squash and stretch shader in Godot. Tested in Godot 4.0 Alpha 11.&lt;/p>
&lt;p>&lt;strong>Note: You may need a high-poly model.&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-glsl" data-lang="glsl">shader_type spatial;
&lt;span style="color:#66d9ef">uniform&lt;/span> &lt;span style="color:#66d9ef">vec2&lt;/span> direction &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">vec2&lt;/span>(&lt;span style="color:#ae81ff">1.0&lt;/span>);
&lt;span style="color:#66d9ef">uniform&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> squash&lt;span style="color:#f92672">:&lt;/span> hint_range(&lt;span style="color:#ae81ff">0.0&lt;/span>, &lt;span style="color:#ae81ff">2.0&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.0&lt;/span>;
&lt;span style="color:#66d9ef">uniform&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> offset&lt;span style="color:#f92672">:&lt;/span> hint_range(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.0&lt;/span>;
&lt;span style="color:#66d9ef">void&lt;/span> vertex() {
&lt;span style="color:#66d9ef">float&lt;/span> v &lt;span style="color:#f92672">=&lt;/span> abs(VERTEX.y &lt;span style="color:#f92672">+&lt;/span> offset) &lt;span style="color:#f92672">*&lt;/span> squash &lt;span style="color:#f92672">+&lt;/span> direction.x;
VERTEX &lt;span style="color:#f92672">*=&lt;/span> &lt;span style="color:#66d9ef">vec3&lt;/span>(v, direction.y, v);
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/O0og6WrAWk0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;hr>
&lt;p>Find the shader on &lt;a href="https://godotshaders.com/shader/squash-and-stretch/">Godot Shaders&lt;/a>.&lt;/p></content></item></channel></rss>